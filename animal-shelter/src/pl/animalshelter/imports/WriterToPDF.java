package pl.animalshelter.imports;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import pl.animalshelter.Units.Animal;
import pl.animalshelter.Units.AnimalList;

import java.time.LocalDateTime;
import java.util.*;
import java.io.FileOutputStream;

public class WriterToPDF {
    private static String DATE = "" + LocalDateTime.now().getYear() + LocalDateTime.now().getMonthValue() +
            LocalDateTime.now().getDayOfMonth() + "-" + LocalDateTime.now().getHour() +
            LocalDateTime.now().getMinute() + LocalDateTime.now().getSecond();
    private static String FILE = "import/Shelter" + DATE  + ".pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 25, Font.UNDERLINE);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    public WriterToPDF(AnimalList animalList) {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            System.out.println("Created file PDF");
            document.open();
            System.out.println("Open file PDF");
            addMetaData(document);
            addContent(document, animalList);
            System.out.println("Data is saved");
            document.close();
            System.out.println("Close file PDF");
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void addMetaData(Document document) {        //dodaje wartości do właściwości
        document.addTitle("My Animal Shelter");
        document.addSubject("Trying to do application");
        document.addKeywords("Java, Shelter, Pdf");
        document.addAuthor("Cezary Sanecki");
        document.addCreator("Cezary Sanecki");
    }

    private static void addContent(Document document, AnimalList animalList) throws DocumentException {
        Paragraph paragraph1 = new Paragraph("List of Animals in Shelter", catFont);
        addEmptyLine(paragraph1, 1);
        document.add(paragraph1);

        Paragraph paragraph2 = new Paragraph("Report generated by: " +
                System.getProperty("user.name") + ", " + new Date(), smallBold);
        addEmptyLine(paragraph2, 3);
        document.add(paragraph2);

        // add a table
        Paragraph paragraph3 = new Paragraph("List", subFont);;
        paragraph3.setAlignment(Paragraph.ALIGN_CENTER);
        document.add(paragraph3);

        Paragraph paragraph4 = new Paragraph("Aktualny stan schroniska: " +
                animalList.getActualAnimals().size() + "/" +
                animalList.getCapacity(), smallBold);
        addEmptyLine(paragraph4, 1);
        paragraph4.setAlignment(Paragraph.ALIGN_CENTER);
        document.add(paragraph4);

        // add a table
        createTable(document, animalList.getActualAnimals());
    }

    private static void createTable(Document document, ArrayList<Animal> animals)
            throws DocumentException {
        PdfPTable table = new PdfPTable(new float[] {2,4,4,2});

        PdfPCell c1 = new PdfPCell(new Phrase("ID"));
        c1.setPadding(10);
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        c1.setBackgroundColor(BaseColor.GRAY);
        c1.setBorderWidth(1);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Nazwa"));
        c1.setPadding(10);
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        c1.setBackgroundColor(BaseColor.GRAY);
        c1.setBorderWidth(1);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Rodzaj"));
        c1.setPadding(10);
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        c1.setBackgroundColor(BaseColor.GRAY);
        c1.setBorderWidth(1);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Wiek"));
        c1.setPadding(10);
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        c1.setBackgroundColor(BaseColor.GRAY);
        c1.setBorderWidth(1);
        table.addCell(c1);

        table.setHeaderRows(1);

        for(Animal a : animals) {
            table.addCell("" + a.getId_animal());
            table.addCell(a.getName());
            table.addCell(a.getKindOfAnimal());
            table.addCell("" + a.getAge());
        }

        document.add(table);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

    @Override
    public String toString() {
        return FILE;
    }
}



